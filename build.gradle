/*
 * Copyright (C) 2014 Andrew Comminos
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

buildscript {
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
    }
}
apply plugin: 'com.android.library'

//repositories {
//    mavenCentral()
//    google()
//}

dependencies {
    api 'com.google.protobuf:protobuf-java:3.21.10'

    api 'com.madgag.spongycastle:core:1.58.0.0'
    api 'com.madgag.spongycastle:prov:1.58.0.0'
    api 'com.madgag.spongycastle:pkix:1.54.0.0'

    implementation 'com.googlecode.javacpp:javacpp:0.7'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.minidns:minidns-hla:0.3.4'
    implementation 'org.minidns:minidns-android21:0.3.4'
    implementation 'com.google.guava:guava:28.2-android'
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

allprojects {
    tasks.withType(JavaCompile) {
        // TODO include deprecations at some point, but currently they are *many*
        options.compilerArgs << "-Xlint:all" << "-Xlint:-deprecation" << "-Xlint:-dep-ann"
    }
}

android {
    compileSdk 33
    ndkVersion '25.1.8937393'
    buildToolsVersion '33.0.0'

    sourceSets.main.jniLibs.srcDir 'src/main/libs/'
    sourceSets.main.jni.srcDirs = [] // Disable NDK build support until it supports multiple modules.

    defaultConfig {
        testApplicationId "dev.whisper.core.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        minSdkVersion 14
        targetSdk 33
        multiDexEnabled true

        ndk {
            // 64-bit arm only
//            abiFilters 'arm64-v8a'
//            stl "gnustl_static"
//            cFlags "-I\$(LOCAL_PATH)/speex/include/ -I\$(LOCAL_PATH)/celt-0.11.0-src/include/ -I\$(LOCAL_PATH)/celt-0.7.0-src/include/ -I\$(LOCAL_PATH)/opus/include -D__EMX__ -DUSE_KISS_FFT -DFIXED_POINT -DEXPORT='' -DHAVE_CONFIG_H -fvisibility=hidden -DOPUS_BUILD -DVAR_ARRAYS -Wno-traditional -DFIXED_POINT"
        }
    }

    // Trigger NDK build on java compilation task.
    task ndkBuild(type: Exec) {
        def ndkExe = "$project.android.ndkDirectory/ndk-build"
        if (DefaultNativePlatform.getCurrentOperatingSystem().isWindows()) {
          ndkExe += '.cmd'
        }
        commandLine ndkExe, '-C', file('src/main/jni/').absolutePath
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    lintOptions {
        quiet false

        // spongycastle-related
        disable "InvalidPackage"

        disable "MissingTranslation"

        ignoreWarnings false
        abortOnError true
    }
}
